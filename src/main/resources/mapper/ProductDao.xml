<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czxy.back.dao.ProductDao">


    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <!--根据id查询商品信息，这里使用了分布查询-->
    <resultMap id="select_product" type="product">
        <id  column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="product_desc" property="productDesc"/>
        <result column="price" property="price"/>
        <result column="unit" property="unit"/>
        <result column="stock" property="stock"/>
        <result column="provide" property="provide"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <association property="category" select="com.czxy.back.dao.CategoryDao.getCategoryById" column="category_id">
        </association>
    </resultMap>
    <!--根据id查询商品信息-->
    <select id="getProductById" resultMap="select_product">
        select * from tb_product where id = #{id}
    </select>



    <!--多条件查询-->
    <!--
        根据查询的条件有: 商品的名称(模糊查询) 商品的分类TODO 商品的提供商(模糊查询)
    -->
    <select id="getProductListByCondition" resultMap="select_product" >
        <!--使用bind标签将name和provide进行处理-->
        select * from tb_product
        <trim prefix="where" prefixOverrides="or">
            <if test="name != null and name != ''">
               or name like '%${name}%'
            </if>
            <if test="provide != null and provide != ''">
              or provide like '%${provide}%'
            </if>
        </trim>
        order by id desc
    </select>

    <!--获取所有的商品-->
    <select id="getAllProducts" resultMap="select_product">
        select * from tb_product order by id desc
    </select>



    <!--根据ID删除单个商品信息-->
    <delete id="deleteProductById">
        delete from tb_product where id = #{id}
    </delete>


    <!--根据ID List批量删除商品-->
    <delete id="batchDeleteProduct" parameterType="list">
        <foreach collection="batchDeleteList" item="item" separator=";">
            delete from tb_product where id = #{item}
        </foreach>
    </delete>

    <!--这里由于数据库中desc字段作为列值了一直报错，因为desc是关键字，所以改为product_desc-->
    <insert id="addProduct" parameterType="product">
      insert into tb_product(name,product_desc,price,category_id,stock,provide,status,create_time,last_edit_time,unit)
      values(#{name},#{productDesc},#{price},#{category.id},#{stock},#{provide},#{status},#{createTime},#{lastEditTime},#{unit})
    </insert>

    <!--更新某个商品信息-->
    <update id="updateProduct" parameterType="product">
        update tb_product
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="productDesc != null and productDesc != ''">
                product_desc = #{productDesc},
            </if>
            <if test="unit != null and unit !=''">
                unit = #{unit},
            </if>
            <if test="price != null and price != ''">
                price = #{price},
            </if>
            <if test="category != null">
                category_id = #{category.id},
            </if>
            <if test="stock != null and stock != ''">
                stock = #{stock},
            </if>
            <if test="provide != null and stock != ''">
                provide = #{provide},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="lastEditTime != null">
                last_edit_time = #{lastEditTime}
            </if>
        </trim>
        where id = #{id}
    </update>


    <update id="updateStockIn" parameterType="orderDetail">
        <foreach collection="orderDetails" item="item" separator=";">
            update tb_product set stock = stock + #{item.productAmount} where id = #{item.productId}
        </foreach>
    </update>

    <update id="updateStockOut" parameterType="orderDetail">
        <foreach collection="orderDetails" item="item" separator=";">
            update tb_product set stock = stock - #{item.productAmount} where id = #{item.productId}
        </foreach>
    </update>

</mapper>